# Starship Configuration

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Wait timeout for commands
command_timeout = 1000

# Format of the prompt
format = """
[┌─](bold green)$username$hostname$directory$git_branch$git_status$python$nodejs$rust$golang$docker_context
[└─](bold green)$character """

# Right prompt shows time
right_format = """$cmd_duration$time"""

# Character module - shows prompt character
[character]
success_symbol = "[➜](bold green)"
error_symbol = "[➜](bold red)"
vicmd_symbol = "[←](bold green)"

# Username module
[username]
format = "[$user]($style)@"
show_always = false
style_user = "bold green"
style_root = "bold red"

# Hostname module  
[hostname]
format = "[$hostname]($style) in "
style = "bold green"
ssh_only = false
disabled = false

# Directory module
[directory]
format = "[$path]($style)[$read_only]($read_only_style) "
style = "bold cyan"
truncation_length = 3
truncate_to_repo = true
read_only = " 🔒"
read_only_style = "red"
home_symbol = "~"

# Git branch module
[git_branch]
format = "on [$symbol$branch]($style) "
symbol = " "
style = "bold purple"

# Git status module
[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "bold red"
conflicted = "🏳"
up_to_date = ""
untracked = "🤷"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"
stashed = "📦"
modified = "📝"
staged = '[++\($count\)](green)'
renamed = "👅"
deleted = "🗑"

# Command duration module
[cmd_duration]
format = "took [$duration]($style) "
style = "bold yellow"
min_time = 2_000
show_milliseconds = false

# Time module
[time]
format = '[$time]($style) '
style = "bold blue"
disabled = false
use_12hr = false

# Python module
[python]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
symbol = "🐍 "
style = "yellow bold"
pyenv_version_name = false
python_binary = ["python", "python3"]
detect_extensions = ["py"]
detect_files = [".python-version", "Pipfile", "__pycache__", "pyproject.toml", "requirements.txt", "setup.py", "tox.ini"]

# Node.js module
[nodejs]
format = "via [$symbol($version )]($style)"
symbol = " "
style = "bold green"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

# Rust module
[rust]
format = "via [$symbol($version )]($style)"
symbol = "🦀 "
style = "bold red"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

# Go module
[golang]
format = "via [$symbol($version )]($style)"
symbol = "🐹 "
style = "bold cyan"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]

# Docker context module
[docker_context]
format = "via [$symbol$context]($style) "
symbol = "🐋 "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]

# AWS module
[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "☁️  "
style = "bold orange"

# Memory usage module (disabled by default)
[memory_usage]
format = "via $symbol [${ram}( | ${swap})]($style) "
symbol = "🐏"
style = "bold dimmed white"
disabled = true
threshold = 75

# Battery module
[battery]
full_symbol = "🔋"
charging_symbol = "⚡️"
discharging_symbol = "💀"
unknown_symbol = "❓"
empty_symbol = "🪫"

[[battery.display]]
threshold = 10
style = "bold red"

[[battery.display]]
threshold = 30
style = "bold yellow"

# Line break module
[line_break]
disabled = false

# Jobs module
[jobs]
format = "[$symbol$number]($style) "
symbol = "✦"
style = "bold blue"
number_threshold = 1

# Status module (exit code)
[status]
format = '[$symbol $status]($style) '
symbol = "✖"
style = "bold red"
disabled = true

# Custom modules can be added here
# Example:
# [custom.foo]
# command = "echo foo"
# when = true
# format = "[$output]($style) "
# style = "bold green"